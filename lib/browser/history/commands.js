'use strict';

const wdioBrowserCommands = [
    '$$',
    '$',
    'action',
    'actions',
    'call',
    'custom$$',
    'custom$',
    'debug',
    'deleteCookies',
    'execute',
    'executeAsync',
    'getCookies',
    'getPuppeteer',
    'getWindowSize',
    'keys',
    'mock',
    'mockClearAll',
    'mockRestoreAll',
    'newWindow',
    'pause',
    'react$$',
    'react$',
    'reloadSession',
    'savePDF',
    'saveRecordingScreen',
    'saveScreenshot',
    'scroll',
    'setCookies',
    'setTimeout',
    'setWindowSize',
    'switchWindow',
    'throttle',
    'touchAction',
    'uploadFile',
    'url',
    'waitUntil'
];

const wdioElementCommands = [
    '$$',
    '$',
    'addValue',
    'clearValue',
    'click',
    'custom$',
    'custom$$',
    'doubleClick',
    'dragAndDrop',
    'getAttribute',
    'getCSSProperty',
    'getComputedRole',
    'getComputedLabel',
    'getHTML',
    'getLocation',
    'getProperty',
    'getSize',
    'getTagName',
    'getText',
    'getValue',
    'isClickable',
    'isDisplayed',
    'isDisplayedInViewport',
    'isEnabled',
    'isEqual',
    'isExisting',
    'isFocused',
    'isSelected',
    'moveTo',
    'nextElement',
    'parentElement',
    'previousElement',
    'react$',
    'react$$',
    'saveScreenshot',
    'scrollIntoView',
    'selectByAttribute',
    'selectByIndex',
    'selectByVisibleText',
    'setValue',
    'shadow$',
    'shadow$$',
    'touchAction',
    'waitForClickable',
    'waitForDisplayed',
    'waitForEnabled',
    'waitForExist',
    'waitUntil'
];

const scopes = {
    BROWSER: 'b',
    ELEMENT: 'e'
};

exports.getBrowserCommands = () => wdioBrowserCommands;
exports.getElementCommands = () => wdioElementCommands;
exports.createScope = (elementScope) => elementScope
    ? scopes.ELEMENT
    : scopes.BROWSER;
